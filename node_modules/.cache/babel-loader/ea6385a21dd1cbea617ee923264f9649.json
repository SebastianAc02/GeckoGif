{"ast":null,"code":"const ENDPOINT = 'http://localhost:4003/db/login';\nexport default function LoginService(_ref) {\n  let {\n    username,\n    password\n  } = _ref;\n  return fetch(`${ENDPOINT}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => {\n    if (!res.ok) {\n      throw new Error(\"Response is not ok\");\n    }\n\n    return res.json();\n  }).then(res => {\n    const {\n      token: jwt\n    } = res;\n    return jwt;\n  });\n}\n_c = LoginService;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginService\");","map":{"version":3,"names":["ENDPOINT","LoginService","username","password","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","json","token","jwt"],"sources":["/Users/sebastianacosta/Bootcamp/giffy/src/services/loginService.js"],"sourcesContent":["\nconst ENDPOINT = 'http://localhost:4003/db/login'\n\n\nexport default function LoginService({ username, password }) {\n  return fetch(`${ENDPOINT}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({username:username, password:password})\n  })\n    .then((res) => {\n    \n      if (!res.ok) {throw new Error(\"Response is not ok\");}\n      return res.json();\n    })\n    .then((res) => {\n      const { token: jwt } = res;\n      return jwt;\n    });\n}\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,gCAAjB;AAGA,eAAe,SAASC,YAAT,OAA8C;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAC3D,OAAOC,KAAK,CAAE,GAAEJ,QAAS,EAAb,EAAgB;IAC1BK,MAAM,EAAE,MADkB;IAE1BC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFiB;IAK1BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACP,QAAQ,EAACA,QAAV;MAAoBC,QAAQ,EAACA;IAA7B,CAAf;EALoB,CAAhB,CAAL,CAOJO,IAPI,CAOEC,GAAD,IAAS;IAEb,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MAAC,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;IAAuC;;IACrD,OAAOF,GAAG,CAACG,IAAJ,EAAP;EACD,CAXI,EAYJJ,IAZI,CAYEC,GAAD,IAAS;IACb,MAAM;MAAEI,KAAK,EAAEC;IAAT,IAAiBL,GAAvB;IACA,OAAOK,GAAP;EACD,CAfI,CAAP;AAgBD;KAjBuBf,Y"},"metadata":{},"sourceType":"module"}