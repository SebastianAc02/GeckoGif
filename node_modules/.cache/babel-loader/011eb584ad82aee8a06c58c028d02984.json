{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianacosta/Bootcamp/giffy/src/components/register/index.js\";\nimport { Formik } from \"formik\";\nimport registerService from \"../../services/registerService\";\nimport \"./register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Register \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.username) {\n          errors.username = 'Required username';\n        }\n\n        if (!values.password) {\n          errors.password = 'Required password';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setFieldError\n        } = _ref;\n        return registerService(values).catch(err => {\n          setFieldError(\"username\", \"username is not vaild \");\n        });\n      },\n      children: _ref2 => {\n        let {\n          errors,\n          handleChange,\n          handleSubmit,\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form i\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"reginp\",\n            name: \"username\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: isSubmitting,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              \"margin\": '20vw',\n              dis\n            },\n            children: errors.username || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Formik","registerService","Register","username","password","values","errors","setFieldError","catch","err","handleChange","handleSubmit","isSubmitting","color","dis"],"sources":["/Users/sebastianacosta/Bootcamp/giffy/src/components/register/index.js"],"sourcesContent":["import { Formik } from \"formik\";\nimport registerService from \"../../services/registerService\";\nimport \"./register.css\";\n\nexport default function Register() {\n  return (\n    <>\n      <h2> Register </h2>\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        validate={values =>{const errors = {}\n      \n      if(!values.username){errors.username = 'Required username'}\n      if(!values.password){errors.password = 'Required password'}\n\n      return errors\n    }}\n        onSubmit={(values, { setFieldError }) => {\n          return registerService(values)\n          .catch((err) => {\n            setFieldError(\"username\", \"username is not vaild \");\n          });\n        }}\n      >\n        {({ errors, handleChange, handleSubmit, isSubmitting }) => (\n          <form className=\"form i\" onSubmit={handleSubmit}>\n            <input\n              className=\"reginp\"\n              name={\"username\"}\n              onChange={handleChange}\n            ></input>\n            <input name={\"password\"} onChange={handleChange}></input>\n            <button className=\"btn\" disabled={isSubmitting}>\n              Register\n            </button>\n\n            <span style={{color: 'red',  \"margin\":'20vw', dis}}>{errors.username||''}</span>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,GAAoB;EACjC,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,aAAa,EAAE;QAAEC,QAAQ,EAAE,EAAZ;QAAgBC,QAAQ,EAAE;MAA1B,CADjB;MAEE,QAAQ,EAAEC,MAAM,IAAG;QAAC,MAAMC,MAAM,GAAG,EAAf;;QAEtB,IAAG,CAACD,MAAM,CAACF,QAAX,EAAoB;UAACG,MAAM,CAACH,QAAP,GAAkB,mBAAlB;QAAsC;;QAC3D,IAAG,CAACE,MAAM,CAACD,QAAX,EAAoB;UAACE,MAAM,CAACF,QAAP,GAAkB,mBAAlB;QAAsC;;QAE3D,OAAOE,MAAP;MACD,CARC;MASE,QAAQ,EAAE,CAACD,MAAD,WAA+B;QAAA,IAAtB;UAAEE;QAAF,CAAsB;QACvC,OAAON,eAAe,CAACI,MAAD,CAAf,CACNG,KADM,CACCC,GAAD,IAAS;UACdF,aAAa,CAAC,UAAD,EAAa,wBAAb,CAAb;QACD,CAHM,CAAP;MAID,CAdH;MAAA,UAgBG;QAAA,IAAC;UAAED,MAAF;UAAUI,YAAV;UAAwBC,YAAxB;UAAsCC;QAAtC,CAAD;QAAA,oBACC;UAAM,SAAS,EAAC,QAAhB;UAAyB,QAAQ,EAAED,YAAnC;UAAA,wBACE;YACE,SAAS,EAAC,QADZ;YAEE,IAAI,EAAE,UAFR;YAGE,QAAQ,EAAED;UAHZ;YAAA;YAAA;YAAA;UAAA,QADF,eAME;YAAO,IAAI,EAAE,UAAb;YAAyB,QAAQ,EAAEA;UAAnC;YAAA;YAAA;YAAA;UAAA,QANF,eAOE;YAAQ,SAAS,EAAC,KAAlB;YAAwB,QAAQ,EAAEE,YAAlC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAWE;YAAM,KAAK,EAAE;cAACC,KAAK,EAAE,KAAR;cAAgB,UAAS,MAAzB;cAAiCC;YAAjC,CAAb;YAAA,UAAqDR,MAAM,CAACH,QAAP,IAAiB;UAAtE;YAAA;YAAA;YAAA;UAAA,QAXF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IAhBH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAqCD;KAtCuBD,Q"},"metadata":{},"sourceType":"module"}